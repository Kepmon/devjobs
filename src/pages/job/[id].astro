---
import BaseLayout from '../../layouts/BaseLayout.astro'
import CustomButton from '../../components/CustomButton.astro'
import { allJobsDb } from '../../xata'
import { returnTimeDifference } from '../../helpers/timeDifference'
import { twMerge } from 'tailwind-merge'

const { id } = Astro.params
const jobOffer = await allJobsDb.read(id as string)

if (jobOffer == null) {
  const error = await fetch(`${Astro.url}/404`)
  return new Response(error.body, {
    headers: error.headers,
    status: 404
  })
}
---

<BaseLayout
  title={`${jobOffer?.position} | ${jobOffer?.company}`}
  job={{
    company: jobOffer?.company || '',
    position: jobOffer?.position || ''
  }}
>
  <article data-id={id} class="job-details__wrapper">
    <header class="job-details__header">
      <div
        class="logo-wrapper"
        style={{ backgroundColor: `${jobOffer?.logoBackground}` }}
      >
        <img
          src={jobOffer != null && jobOffer.logo ? jobOffer.logo[0].url : null}
          alt="company logo"
          class="md:scale-[2]"
        />
      </div>
      <div
        class="grid gap-6 justify-center md:grow md:flex md:justify-between md:px-10 mt-6 md:mt-0"
      >
        <div class="text-center md:text-left">
          <p class="mb-2 text-md dark:text-white font-[700]">
            <span class="sr-only">the company name:</span>{jobOffer?.company}
          </p>
          <a
            href={jobOffer?.website}
            target="_blank"
            class={twMerge(
              'text-gray-500 rounded-md gray-outline outline-offset-8'
            )}
            ><span class="sr-only">the company site:</span>{
              jobOffer?.website.replace('https://', '')
            }</a
          >
        </div>
        <a
          href={jobOffer?.website}
          target="_blank"
          class={twMerge(
            'custom-button custom-button--gray custom-button-padding md:self-center blue-outline dark:outline-gray-600'
          )}
          ><span class="sr-only">click here to go to the</span> Company Site</a
        >
      </div>
    </header>
    <main class="article-main">
      <header class="grid xs:flex xs:justify-between gap-12">
        <div class="[&>:not(:last-child)]:mb-3">
          <div class="gray-text-wrapper">
            <p>
              <span class="sr-only">the job offer was posted</span>{
                returnTimeDifference(jobOffer?.xata.createdAt as Date)
              }
            </p>
            <p aria-hidden="true" class="dot">&#x2022;</p>
            <p>
              <span class="sr-only">the contract is</span>{jobOffer?.contract}
            </p>
          </div>
          <h1 class="text-lg font-[800]">{jobOffer?.position}</h1>
          <p class="self-end text-blue-500 text-xs font-[700]">
            <span class="sr-only">the job is in</span>{jobOffer?.location}
          </p>
        </div>
        <CustomButton moreClasses="self-center whitespace-nowrap blue-outline">
          Apply Now
        </CustomButton>
      </header>
      <section aria-labelledby="description" class="job-offer-section">
        <h2 id="description">Description</h2>
        <p>{jobOffer?.description}</p>
      </section>
      <section aria-labelledby="requirements" class="job-offer-section">
        <h2 id="requirements">Requirements</h2>
        <div>
          <p class="mb-6">{jobOffer?.requirements.content}</p>
          <ul>
            {
              jobOffer?.requirements.items.map((item: string) => (
                <li>
                  <span class="text-[2rem] leading-5">&#x2022;</span> {item}
                </li>
              ))
            }
          </ul>
        </div>
      </section>
      <section aria-labelledby="role" class="job-offer-section">
        <h2 id="role">What you will do</h2>
        <div>
          <p class="mb-6">{jobOffer?.role.content}</p>
          <ol>
            {
              jobOffer?.role.items.map((item: string, index: number) => (
                <li>
                  <span>{index + 1}</span> {item}
                </li>
              ))
            }
          </ol>
        </div>
      </section>
    </main>
  </article>
</BaseLayout>

<style>
  .job-details__header {
    @apply relative items-center py-6 bg-white dark:bg-gray-800 rounded-md;
    @apply md:flex md:py-0 md:overflow-hidden;
  }

  .article-main {
    @apply grid gap-10 p-6 md:p-12 mt-8 bg-white dark:bg-gray-800 dark:text-white rounded-md;
  }

  .logo-wrapper {
    @apply grid place-content-center absolute inset-[-24px_0_auto];
    @apply m-auto p-2 w-10 aspect-square rounded-2xl box-content;
    @apply md:static md:m-0 md:py-2 md:px-4 md:w-28 md:rounded-none;
  }

  .job-offer-section {
    @apply grid gap-7;
  }

  .job-offer-section > h2 {
    @apply text-md font-[800];
  }

  .job-offer-section :where(ul, ol) {
    @apply grid gap-2;
  }

  .job-offer-section li {
    @apply flex items-start gap-4 md:gap-8;
  }

  .job-offer-section li > span {
    @apply text-blue-500 font-[800];
  }
</style>
